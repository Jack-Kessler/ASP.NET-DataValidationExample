@*
    DEFAULT TEMPLATE FOR ASP.NET CORE MVC
*@
@*@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>


@if(User.Identity.IsAuthenticated)
{
    @if (User.IsInRole("admin"))
    {
        <h3>Welcome Admin!</h3>
    }
    else
    {
        <h3>Welcome!</h3>
    }
}*@



@*
    THREE.JS PLAYGROUND
*@
<style>

    body {
        margin-left: 10px;
        font-size: large;
    }

    .title {
        text-align: center;
        margin: 15px;
        color: white;
    }
</style>



<div class="title">
    <h1>Three.js Demo</h1>
    <div onload="onLoad" id="body">Demo</div>
</div>

<script src="~/Three_js/three.min.js"></script>
<script>

    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(
        75,
        window.innerWidth / window.innerHeight,
        0.1,
        1000
    );

    //TODO pointer lock => research

    const renderer = new THREE.WebGLRenderer();
    renderer.setSize(window.innerWidth - 50, window.innerHeight - 125);
    const demo = document.getElementById("body");
    demo.appendChild(renderer.domElement);

    const geometry = new THREE.BoxGeometry(1, 1, 1);
    const material = new THREE.MeshBasicMaterial({ color: 0x0000ff });
    const cube = new THREE.Mesh(geometry, material);
    scene.add(cube);

    camera.position.z = 5;

    const size = 100;
    const divisions = 50;

    const gridHelper = new THREE.GridHelper(size, divisions);

    //gridHelper.rotation.z = Math.PI / 12;
    //gridHelper.rotation.y = Math.PI / 4;
    gridHelper.rotation.x = Math.PI / 8;

    


    function animate() {
        requestAnimationFrame(animate);

        cube.rotation.x += 0.01;
        cube.rotation.y += 0.01;

        renderer.render(scene, camera);
    }

    cube.rotation.x += 0.50;
    cube.rotation.y -= 0.25;

    renderer.render(scene, camera)
    animate();


    scene.add(gridHelper);
</script>


