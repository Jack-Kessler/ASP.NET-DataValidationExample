
<style>
    body {
        margin-left: 10px;
        font-size: large;
    }

    .title {
        text-align: center;
        color: white;
    }
</style>



<div class="title">
    <h1>Three.js Demo</h1>
</div>

<script src="~/Three_js/three.min.js"></script>
<script>
    
        //(function () {
        //    // Scene
        //    var scene = new THREE.Scene();
        //    scene.background = new THREE.Color(0x2f2f2f);

        //    var material_override = new THREE.MeshBasicMaterial({
        //        color: new THREE.Color('lime'),
        //        wireframe: true
        //    });
        //    scene.overrideMaterial = material_override;

        //    // mesh1
        //    var mesh = new THREE.Mesh(
        //        new THREE.BoxGeometry(0.5, 0.5, 0.5),
        //        new THREE.MeshDepthMaterial());
        //    scene.add(mesh);

        //    var mesh2 = new THREE.Mesh(
        //        new THREE.BoxGeometry(0.5, 0.5, 0.5),
        //        new THREE.MeshNormalMaterial());
        //    mesh2.position.set(-1.5, 0, 0);
        //    scene.add(mesh2);

        //    // Camera
        //    var camera = new THREE.PerspectiveCamera(45, 4 / 3, 0.75, 10);
        //    camera.position.set(1.15, 0.85, 0.75);
        //    camera.lookAt(0, 0, 0);
        //    var light = new THREE.PointLight(0xffffff, 1);
        //    light.position.set(1, 1, 0);
        //    camera.add(light)
        //    scene.add(camera);
        //    // Render
        //    var renderer = new THREE.WebGLRenderer();
        //    renderer.setSize(640, 480);
        //    document.getElementById('demo').appendChild(renderer.domElement);

        //    var lt = new Date(),
        //        time = 0,
        //        switchTime = 1.0,
        //        fps = 30;
        //    var loop = function () {
        //        var now = new Date(),
        //            secs = (now - lt) / 1000;
        //        requestAnimationFrame(loop);
        //        if (secs > 1 / fps) {
        //            time += secs;
        //            if (time >= switchTime) {
        //                if (scene.overrideMaterial) {
        //                    scene.overrideMaterial = null;
        //                } else {
        //                    scene.overrideMaterial = material_override;
        //                }
        //                time %= switchTime;
        //            }
        //            renderer.render(scene, camera);
        //            lt = now;
        //        }
        //    };

        //    loop();

        //}
        //    ());
    function animate() {
        requestAnimationFrame(animate);

        cube.rotation.x += 0.01;
        cube.rotation.y += 0.01;

        sphere.rotation.x += 0.01;
        sphere.rotation.y += 0.01;

        renderer.render(scene, camera);
    }

    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(
        75,
        window.innerWidth / window.innerHeight,
        0.1,
        1000
    );

    //TODO pointer lock => research

    const renderer = new THREE.WebGLRenderer();
    renderer.setSize(window.innerWidth - 50, window.innerHeight - 125);
    document.body.appendChild(renderer.domElement)

    const geometry = new THREE.BoxGeometry(1, 1, 1);
    const material = new THREE.MeshBasicMaterial({ color: 0x0000ff });
    const cube = new THREE.Mesh(geometry, material);
    cube.position.x = -1;
    scene.add(cube);

    const geo1 = new THREE.SphereGeometry(.5,10,10);
    const mat1 = new THREE.MeshBasicMaterial({ color: 0xccc });
    const sphere = new THREE.Mesh(geo1, mat1);
    sphere.position.x = 1;
    scene.add(sphere);


    
    camera.position.z = 5;

    const size = 100;
    const divisions = 50;
    const gridHelper = new THREE.GridHelper(size, divisions);
    //gridHelper.rotation.z = Math.PI / 12;
    //gridHelper.rotation.y = Math.PI / 4;
    gridHelper.rotation.x = Math.PI / 8;
    cube.rotation.x += 0.50;
    cube.rotation.y -= 0.25;
    scene.add(gridHelper);

    renderer.render(scene, camera)
    animate();


</script>


